apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "com.amlwin.android.launchpad"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.kotlin_version"
    implementation "androidx.appcompat:appcompat:$rootProject.appcompat_version"
    implementation "androidx.core:core-ktx:$rootProject.ktx_version"

    //view lib
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintlayout_version"

    //test-core
    androidTestImplementation "androidx.test:core:$rootProject.test_core_version"

    //test
    testImplementation "junit:junit:$rootProject.junit_version"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.junit_ext_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espresso_core_version"

    //api test
    testImplementation "com.squareup.okhttp3:mockwebserver:$rootProject.mock_server_version"

    //mock
    testImplementation "org.mockito:mockito-core:$rootProject.mockito_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$rootProject.mocktio_kotlin_version"

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation "androidx.test:runner:$rootProject.runner_rule_version"
    androidTestImplementation "androidx.test:rules:$rootProject.runner_rule_version"

    // Assertions
    testImplementation "com.google.truth:truth:$rootProject.google_truth_version"

    //vm
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycle_version"
    //liveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$rootProject.lifecycle_version"
    //lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$rootProject.lifecycle_version"
    //live cycle test
    testImplementation "androidx.arch.core:core-testing:$rootProject.arch_version"

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.logginer_intercepter_version"

    //dagger
    implementation "com.google.dagger:dagger:$rootProject.dagger_version"
    implementation "com.google.dagger:dagger-android:$rootProject.dagger_version"
    implementation "com.google.dagger:dagger-android-support:$rootProject.dagger_version"
    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.dagger_version"

    //kotlin-coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.kotlin_coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.kotlin_coroutine_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$rootProject.kotlin_coroutine_version"

    //timber
    implementation "com.jakewharton.timber:timber:$rootProject.timber_version"

    //glide
    implementation "com.github.bumptech.glide:glide:$rootProject.glide_version"
    kapt "com.github.bumptech.glide:compiler:$rootProject.glide_version"

    //three ten
    implementation "com.jakewharton.threetenabp:threetenabp:$rootProject.threeten_version"

    //material android
    implementation "com.google.android.material:material:$rootProject.material_version"
}
